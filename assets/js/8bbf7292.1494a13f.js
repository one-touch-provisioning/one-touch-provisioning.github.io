"use strict";(self.webpackChunkotp_docs=self.webpackChunkotp_docs||[]).push([[1300],{3905:(e,t,r)=>{r.d(t,{Zo:()=>a,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},a=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,a=c(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,y=u["".concat(s,".").concat(d)]||u[d]||f[d]||i;return r?n.createElement(y,p(p({ref:t},a),{},{components:r})):n.createElement(y,p({ref:t},a))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,p=new Array(i);p[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,p[1]=c;for(var l=2;l<i;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8379:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const i={},p="Deploy OpenShift GitOps",c={unversionedId:"guides/policies/policies",id:"guides/policies/policies",title:"Deploy OpenShift GitOps",description:"",source:"@site/docs/03-guides/04-policies/01-policies.md",sourceDirName:"03-guides/04-policies",slug:"/guides/policies/policies",permalink:"/guides/policies/policies",draft:!1,editUrl:"https://github.com/one-touch-provisioning/otp-docs/docs/03-guides/04-policies/01-policies.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Deploy a single-node OpenShift (SNO) cluster",permalink:"/guides/provisioning-guides/sno"},next:{title:"Deploy applications",permalink:"/category/deploy-applications"}},s={},l=[],a={toc:l},u="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},a,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-openshift-gitops"},"Deploy OpenShift GitOps"))}f.isMDXComponent=!0}}]);