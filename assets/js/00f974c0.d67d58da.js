"use strict";(self.webpackChunkotp_docs=self.webpackChunkotp_docs||[]).push([[9520],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,g=d["".concat(s,".").concat(h)]||d[h]||u[h]||i;return n?o.createElement(g,r(r({ref:t},c),{},{components:n})):o.createElement(g,r({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:a,r[1]=p;for(var l=2;l<i;l++)r[l]=n[l];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const i={},r="Git repositories",p={unversionedId:"guides/technical-explanations/git-repositories",id:"guides/technical-explanations/git-repositories",title:"Git repositories",description:"The One Touch Provisioning pattern is consisted of 6 repositories otp-gitops-infra, otp-gitops-services, otp-gitops-clusters, otp-gitops-apps and otp-gitops-policies. These tepmlate repositories source code are pulled into otp-gitops bootstrap repository.",source:"@site/docs/03-guides/01-technical-explanations/02-git-repositories.md",sourceDirName:"03-guides/01-technical-explanations",slug:"/guides/technical-explanations/git-repositories",permalink:"/guides/technical-explanations/git-repositories",draft:!1,editUrl:"https://github.com/one-touch-provisioning/otp-docs/docs/03-guides/01-technical-explanations/02-git-repositories.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ArgoCD concepts",permalink:"/guides/technical-explanations/argocd-concepts"},next:{title:"Red Hat Advanced Cluster Management concepts",permalink:"/guides/technical-explanations/rhacm-concepts"}},s={},l=[{value:"Code organisation",id:"code-organisation",level:2}],c={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"git-repositories"},"Git repositories"),(0,a.kt)("p",null,"The One Touch Provisioning pattern is consisted of 6 repositories: 1 bootstrap repository ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops"),", containing the ArgoCD Applications, and 5 template repositories: ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops-infra"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops-services"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops-clusters"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops-apps")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops-policies"),". These tepmlate repositories source code are pulled into ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops")," bootstrap repository."),(0,a.kt)("p",null,"Rather than relying on a single mono repository, we use multiple repositories to reflect the ownership and contributions of various personas. Refer to ",(0,a.kt)("a",{parentName:"p",href:"/#motivation"},"Motivation")," for details."),(0,a.kt)("h2",{id:"code-organisation"},"Code organisation"),(0,a.kt)("p",null,"As the source repositories are constant across multiple ArgoCD applications, OTP uses Kustomize to patch each ArgoCD applications with the approriate repository URL."),(0,a.kt)("p",null,"As an example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," layer is responsible for setting up an organisation's infrastructure components: machinesets, infraconfig, storage, etc. In ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," layer is contained in an overarching ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," ArgoCD Application, and an ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," ArgoCD AppProject. The ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," application helps provide a sync context to deploy infrastructure applications (refer to ",(0,a.kt)("a",{parentName:"p",href:"/guides/technical-explanations/argocd-concepts"},"ArgoCD concepts")," for more details), while the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," AppProject restricts what resources, where the source templates come from, and which clusters and namespaces the resources are allowed to be deployed into (refer to ",(0,a.kt)("a",{parentName:"p",href:"/guides/technical-explanations/argocd-concepts"},"ArgoCD concepts")," for more details)."),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"otp-gitops"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/one-touch-provisioning/otp-gitops/blob/146ddce502/0-bootstrap/hub/1-infra/1-infra.yaml"},(0,a.kt)("inlineCode",{parentName:"a"},"0-bootstrap/hub/1-infra/1-infra.yaml"))," contains the source code to the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," ArgoCD ",(0,a.kt)("inlineCode",{parentName:"p"},"app")," and the associated ",(0,a.kt)("inlineCode",{parentName:"p"},"AppProject"),". Note that each layer can be selected with a label. In the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," layer example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," AppProject and Application has labels ",(0,a.kt)("inlineCode",{parentName:"p"},"gitops.tier.layer=infra"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="0-bootstrap/hub/1-infra/1-infra.yaml"',title:'"0-bootstrap/hub/1-infra/1-infra.yaml"'},'---\napiVersion: argoproj.io/v1alpha1\n// highlight-next-line\nkind: AppProject\nmetadata:\n  name: infra\n  // highlight-start\n  labels:\n    gitops.tier.layer: infra\n  // highlight-end\nspec:\n  sourceRepos: [] # Populated by kustomize patches in 1-infra/kustomization.yaml\n  destinations:\n  - namespace: namespace\n    server: k8s-server\n  clusterResourceWhitelist:\n  - group: allowed-apigroup\n    kind: allowed-kind\n  roles:\n  # A role which provides read-only access to all applications in the project\n  - name: read-only\n    description: Read-only privileges to my-project\n    policies:\n    - p, proj:my-project:read-only, applications, get, my-project/*, allow\n    groups:\n    - argocd-admins\n---\napiVersion: argoproj.io/v1alpha1\n// highlight-next-line\nkind: Application\nmetadata:\n  name: infra\n  annotations:\n    argocd.argoproj.io/sync-wave: "100"\n  // highlight-start\n  labels:\n    gitops.tier.layer: gitops\n  // highlight-end\nspec:\n  destination:\n    namespace: openshift-gitops\n    server: https://kubernetes.default.svc\n  project: infra\n  source: # repoURL  and targetRevision populated by kustomize patches in 1-infra/kustomization.yaml\n    path: 0-bootstrap/hub/1-infra\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"repoURL")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"targetRevision"),", used to determine where ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," apps can pull its templates from, is provided in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/one-touch-provisioning/otp-gitops/blob/146ddce502/0-bootstrap/hub/1-infra/kustomization.yaml#L76"},(0,a.kt)("inlineCode",{parentName:"a"},"0-bootstrap/hub/1-infra/kustomization.yaml")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="0-bootstrap/hub/1-infra/kustomization.yaml"',title:'"0-bootstrap/hub/1-infra/kustomization.yaml"'},'resources:\n # Infrastructure applications to be patched\n\npatches:\n- target:\n    group: argoproj.io\n    kind: Application\n    // highlight-start\n    labelSelector: "gitops.tier.layer=infra"\n    // highlight-end\n  patch: |-\n    - op: add\n    // highlight-start\n      path: /spec/source/repoURL\n    // highlight-end\n      value: ${GIT_BASEURL}/${GIT_ORG}/${GIT_GITOPS_INFRA}\n    - op: add\n    // highlight-start\n      path: /spec/source/targetRevision\n    // highlight-end\n      value: ${GIT_GITOPS_BRANCH}\n')),(0,a.kt)("p",null,"The allowed source repositories for the ",(0,a.kt)("inlineCode",{parentName:"p"},"infra")," AppProject is provided in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/one-touch-provisioning/otp-gitops/blob/146ddce502/0-bootstrap/hub/kustomization.yaml#L26"},(0,a.kt)("inlineCode",{parentName:"a"},"0-bootstrap/hub/kustomization.yaml")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="0-bootstrap/hub/kustomization.yaml"',title:'"0-bootstrap/hub/kustomization.yaml"'},'resources:\n - 1-infra/1-infra.yaml\n # Other YAML files containing the ArgoCD AppProjects and Applications\npatches:\n  # Other patch targets\n  - target:\n      group: argoproj.io\n      kind: AppProject\n      labelSelector: "gitops.tier.layer=infra"\n    patch: |-\n      - op: add\n        path: /spec/sourceRepos/-\n        value: ${GIT_BASEURL}/${GIT_ORG}/${GIT_GITOPS}\n      - op: add\n        path: /spec/sourceRepos/-\n        value: ${GIT_BASEURL}/${GIT_ORG}/${GIT_GITOPS_INFRA}\n')),(0,a.kt)("p",null,"Similar patterns exist for other layers in the pattern."),(0,a.kt)("p",null,"As the use cases evolve, OTP will choose to adopt and innovate on the code organisation and deployment methodologies. Check back on this page for future updates."))}u.isMDXComponent=!0}}]);